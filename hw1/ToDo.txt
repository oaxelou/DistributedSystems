ΑΜΕΣΑ:
1) 
2) 
3)  
4) 
5) 
6) 

//////////////////////////////////////////////////////////////////////////////////

Γενικά:
1) Στο τέλος να ξανακοιτάξουμε τι ακριβώς γίνεται με τα sockets kai to
multicast

//////////////////////////////////////////////////////////////////////////////////

Για Τεταρτη 6/3/2019:
1) load balancing:
  α) ΟΚ βάλε 2 ακόμα πεδία στο tuple του serverdictionary
  β) Αφού επιβεβαιώσεις ότι λειτουργεί το πρώτο πεδίο (active/inactive), αύξησε τον αριθμό των servers (βάλε threshold, κοίτα το total_load)
  γ) (προαιρετικα) να κοιτά ποιος server έχει το λιγότερο load και να τον επιλέγει για μία νέα αίτηση (+ να του αυξάνει το load όταν έρθει διπλότυπο)
     ΟΚ απλα χρειάστηκε κι αλλο πεδιο στο tuple στο requestsdictionary για το σε ποιο server εχει ανατεθει


-> ΟΚ Να αλλάξουμε το πως διαχειρίζεται ο master server τις αιτήσεις με διάφορα srvcID
-> ΟΚ Αν πεσει ενας σερβερ ενω διαχειριζεται μια αιτηση να το καταλαβει ο master
-> OK Αν δεν υπαρχει διαθέσιμος server (ειτε γενικα κανενας ειτε με το συγκεκριμενο ID) να ειδοποιει τον client και αυτος να το διαχειριζεται

-> Να φτιάξουμε κι άλλη μία εφαρμογη να ελέγξουμε οτι λειτουργεί παράλληλα και για πολλαπλά serviceID
//////////////////////////////////////////////////////////////////////////////////

Τι έχει γίνει ως τώρα:

1) master server part1
2) client 
3) master server part2
4) 


